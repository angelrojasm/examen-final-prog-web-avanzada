{"version":3,"sources":["card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","style","height","width","display","flexDirection","border","marginBottom","overflow","src","thumbnailUrl","title","App","useState","events","setEvents","query","setQuery","a","fetch","message","json","jsonMessage","finalArray","filter","word","includes","console","log","className","justifyContent","alignItems","margin","type","name","placeholder","onChange","e","target","value","onClick","map","ev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAWgBA,EATH,SAACC,GACd,OACA,sBAAKC,GAAG,OAAOC,MAAO,CAACC,OAAQ,cAAeC,MAAO,OAAQC,QAAS,OAAQC,cAAe,SAAUC,OAAQ,iBAAiBC,aAAc,MAAOC,SAAU,QAA/J,UACI,qBAAKC,IAAKV,EAAMW,eAChB,6BAAKX,EAAMY,QACX,sCAASZ,EAAMC,UC4BJY,MAjCf,WAAgB,IAAD,EACeC,mBAAS,MADxB,mBACNC,EADM,KACEC,EADF,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,iDAIb,gCAAAC,EAAA,sEACsBC,MAAM,+CAD5B,cACMC,EADN,gBAE0BA,EAAQC,OAFlC,OAEMC,EAFN,OAIMC,EAAaD,EAAYE,QAAO,SAAAC,GAAI,OAAIA,EAAKd,MAAMe,SAASV,MAChED,EAAUQ,GACVI,QAAQC,IAAIL,GANd,4CAJa,sBAmBb,OACE,sBAAKM,UAAU,MAAM5B,MAAO,CAACE,MAAO,QAASD,OAAQ,QAASE,QAAS,OAAQC,cAAe,SAASyB,eAAgB,QAASC,WAAY,UAA5I,UACE,8CACA,uBAAO9B,MAAO,CAAC+B,OAAQ,SAASC,KAAK,OAAOC,KAAK,WAAWC,YAAY,QAAQC,SAAU,SAACC,GAAMpB,EAASoB,EAAEC,OAAOC,UACnH,wBAAQtC,MAAO,CAACE,MAAO,OAAO6B,OAAQ,SAAUQ,QAvBvC,2CAuBT,sBACC1B,GACD,gCACE,+CAZGA,EAAO2B,KAAI,SAACC,GACjB,OAAO,cAAC,EAAD,CAAMhC,aAAcgC,EAAGhC,aAAcC,MAAO+B,EAAG/B,MAAOX,GAAI0C,EAAG1C,eCL3D2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10f2bc34.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst Card = (props) => {\r\nreturn (\r\n<div id='card' style={{height: 'fit-content', width: '20vw', display: 'flex', flexDirection: 'column', border: '1px solid gray',marginBottom: '2vh', overflow: 'auto'}}>\r\n    <img src={props.thumbnailUrl} />\r\n    <h3>{props.title}</h3>\r\n    <h4>id: {props.id}</h4>\r\n</div>\r\n)\r\n}\r\n export default Card;","import {useState} from 'react';\nimport Card from './card'\nfunction App() {\n  const [events, setEvents] = useState(null);\n  const [query, setQuery] = useState(\"\")\n\n  async function getEvents() {\n    let message = await fetch(\"https://jsonplaceholder.typicode.com/photos\")\n    let jsonMessage = await message.json();\n\n    let finalArray = jsonMessage.filter(word => word.title.includes(query));\n    setEvents(finalArray)\n    console.log(finalArray)\n  } \n\n  function generateEvents() {\n    return events.map((ev) =>{\n      return <Card thumbnailUrl={ev.thumbnailUrl} title={ev.title} id={ev.id} />\n    })\n  }\n\n  return (\n    <div className=\"App\" style={{width: \"100vw\", height: \"100vh\", display: \"flex\", flexDirection: \"column\",justifyContent: \"start\", alignItems: 'center'}}>\n      <h2>Event Finder</h2>\n      <input style={{margin: '5vh 0'}}type=\"text\" name=\"nickname\" placeholder=\"Input\" onChange={(e)=> {setQuery(e.target.value)}} />\n      <button style={{width: '10vw',margin: '5vh 0'}} onClick={getEvents}>GetEvent</button>\n      {events && (\n      <div>\n        <h3>Results are: </h3>\n        {generateEvents()}\n      </div>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}